-- 1. WHO IS THE SENIOR MOST EMPLOYEE BASED ON JOB TITLE?

SELECT * FROM EMPLOYEE
ORDER BY LEVELS DESC
FETCH FIRST 1 ROWS ONLY;

-- 2. WHICH COUNTRIES HAVE THE MOST INVOICES?

SELECT COUNT(*) AS TOTAL_INVOICES, BILLING_COUNTRY
FROM INVOICE
GROUP BY BILLING_COUNTRY
ORDER BY TOTAL_INVOICES DESC;

-- 3. WHAT ARE TOP 3 VALUES OF TOTAL INVOICES?

SELECT TOTAL
FROM INVOICE
ORDER BY TOTAL DESC
FETCH FIRST 3 ROWS ONLY;

-- 4. WHICH CITY HAS THE BEST CUSTOMERS?
-- RETURN THE CITY AND TOTAL MONEY SPENT.

SELECT C.CITY, SUM(I.TOTAL) AS TOTAL_SPENT
FROM CUSTOMER C
JOIN INVOICE I ON C.CUSTOMER_ID = I.CUSTOMER_ID
GROUP BY C.CITY
ORDER BY TOTAL_SPENT DESC
FETCH FIRST 1 ROWS ONLY;

-- 5. WHO IS THE BEST CUSTOMER?

SELECT C.CUSTOMER_ID, C.FIRST_NAME, C.LAST_NAME, SUM(I.TOTAL) AS TOTAL_MONEY
FROM CUSTOMER C
JOIN INVOICE I ON C.CUSTOMER_ID = I.CUSTOMER_ID
GROUP BY C.CUSTOMER_ID
ORDER BY TOTAL_MONEY DESC
FETCH FIRST 1 ROWS ONLY;

-- 6. RETURN EMAIL, FIRST NAME, LAST NAME OF ALL ROCK MUSIC LISTENERS ORDERED BY EMAIL.
SELECT DISTINCT C.EMAIL, C.FIRST_NAME, C.LAST_NAME
FROM CUSTOMER C
JOIN INVOICE I ON C.CUSTOMER_ID = I.CUSTOMER_ID
JOIN INVOICE_LINE IL ON IL.INVOICE_ID = I.INVOICE_ID
JOIN TRACK T ON T.TRACK_ID = IL.TRACK_ID
JOIN GENRE G ON G.GENRE_ID = T.GENRE_ID
WHERE G.NAME = 'Rock'
ORDER BY C.EMAIL ASC;

-- 7. TOP 10 ARTISTS WITH MOST ROCK SONGS.

SELECT A.ARTIST_ID, A.NAME, COUNT(T.NAME) AS ROCK_COUNT
FROM ARTIST A
JOIN ALBUM D ON A.ARTIST_ID = D.ARTIST_ID
JOIN TRACK T ON T.ALBUM_ID = D.ALBUM_ID
JOIN GENRE G ON G.GENRE_ID = T.GENRE_ID
WHERE G.NAME = 'Rock'
GROUP BY A.ARTIST_ID, A.NAME
ORDER BY ROCK_COUNT DESC
FETCH FIRST 10 ROWS ONLY;

-- 8. TRACKS LONGER THAN AVERAGE SONG LENGTH.

SELECT TRACK_ID, NAME, MILLISECONDS AS SONG_LENGTH
FROM TRACK
WHERE MILLISECONDS > (SELECT AVG(MILLISECONDS) FROM TRACK)
ORDER BY SONG_LENGTH DESC;

-- 9. AMOUNT SPENT BY EACH CUSTOMER ON ARTISTS.

SELECT C.CUSTOMER_ID,
       C.FIRST_NAME || ' ' || C.LAST_NAME AS CUSTOMER_NAME,
       A.NAME AS ARTIST_NAME,
       SUM(IL.UNIT_PRICE * IL.QUANTITY) AS TOTAL_SPENT
FROM CUSTOMER C
JOIN INVOICE I ON C.CUSTOMER_ID = I.CUSTOMER_ID
JOIN INVOICE_LINE IL ON I.INVOICE_ID = IL.INVOICE_ID
JOIN TRACK T ON IL.TRACK_ID = T.TRACK_ID
JOIN ALBUM AB ON T.ALBUM_ID = AB.ALBUM_ID
JOIN ARTIST A ON AB.ARTIST_ID = A.ARTIST_ID
GROUP BY C.CUSTOMER_ID, CUSTOMER_NAME, A.ARTIST_ID, A.NAME
ORDER BY CUSTOMER_NAME, TOTAL_SPENT DESC;

-- 10. MOST POPULAR MUSIC GENRE PER COUNTRY.

WITH POPULAR_GENRE AS (
    SELECT COUNT(IL.QUANTITY) AS PURCHASES,
           C.COUNTRY,
           G.NAME AS GENRE_NAME,
           G.GENRE_ID,
           ROW_NUMBER() OVER(PARTITION BY C.COUNTRY ORDER BY COUNT(IL.QUANTITY) DESC) AS ROWNO
    FROM INVOICE_LINE IL
    JOIN INVOICE I ON I.INVOICE_ID = IL.INVOICE_ID
    JOIN CUSTOMER C ON C.CUSTOMER_ID = I.CUSTOMER_ID
    JOIN TRACK T ON T.TRACK_ID = IL.TRACK_ID
    JOIN GENRE G ON G.GENRE_ID = T.GENRE_ID
    GROUP BY C.COUNTRY, G.NAME, G.GENRE_ID
)
SELECT *
FROM POPULAR_GENRE
WHERE ROWNO = 1;

-- 11. TOP CUSTOMER BY SPENDING IN EACH COUNTRY.

WITH CUSTOMER_WITH_COUNTRY AS (
    SELECT C.CUSTOMER_ID,
           C.FIRST_NAME,
           C.LAST_NAME,
           C.COUNTRY,
           SUM(I.TOTAL) AS TOTAL_SPENDING,
           ROW_NUMBER() OVER(PARTITION BY C.COUNTRY ORDER BY SUM(I.TOTAL) DESC) AS ROWNO
    FROM CUSTOMER C
    JOIN INVOICE I ON C.CUSTOMER_ID = I.CUSTOMER_ID
    GROUP BY C.CUSTOMER_ID, C.FIRST_NAME, C.LAST_NAME, C.COUNTRY
)
SELECT *
FROM CUSTOMER_WITH_COUNTRY
WHERE ROWNO = 1;
